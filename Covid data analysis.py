# -*- coding: utf-8 -*-
"""Copy of AICTE intern - EDA Task

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TFNjoPaD3KkJTqIK4AgiwklUpOZAN4fq

**Exploratory Data Analysis on Covid Data**

1.Importing data using pandas
"""

import pandas as pd
data = pd.read_csv("/content/covid-data.csv")

"""2.High level data understanding

a.Number of rows and columns
"""

print(data.shape)

"""b.Datatypes,Information,Describe"""

print(data.dtypes)

print(data.info)

print(data.describe)

"""3.Low level data understandng

a.Count unique values in each columns
"""

print(data['new_deaths'].nunique)

print(data.nunique)

"""b.Find which continent have maximum frequency of values."""

Maximum_Frequency=data['continent'].value_counts()
Maximum_Frequency_continent=Maximum_Frequency.idxmax()
print(Maximum_Frequency_continent,Maximum_Frequency.max())

"""c.max & mean value in total_cases"""

print("Maximum Value",data['total_cases'].max)
print("Mean",data['total_cases'].mean)

"""d.find interquartiles"""

print(data['total_deaths'].describe(percentiles=[.25,.50,.75]))

"""e.Find which continent have highest human_value_development_index."""

df=data.groupby('continent')['human_development_index'].max()
continent=df.idxmax()
df1=df.max()
print(continent,df1)

"""f.Find Which continent have minimum gdp_per_captia"""

df2=data.groupby('continent')['gdp_per_capita'].min()
continent1=df2.idxmin()
mini=df2.min()
print(continent1,mini)

"""4.Filtering"""

tokeep=['continent','location','date','total_cases','total_deaths','gdp_per_capita','human_development_index']
df=data[tokeep]
print(df)

"""5.Data Cleaning."""

df_cleaned=df.drop_duplicates()
df_3=df_cleaned.isna().sum()
df_cleaned = df_cleaned.dropna(subset=['continent'])

df_cleaned=df_cleaned.fillna(0)
print(df_cleaned)

"""6.a.date time format"""

df_cleaned['date'] = pd.to_datetime(df_cleaned['date'], errors='coerce')
print(df_cleaned['date'])

"""b.Extract month from date column"""

df_cleaned['month']=df_cleaned['date'].dt.month
print("New Extracted Month Column",df_cleaned['month'])

"""7.a Data Aggregation - Find maximum values in every columns grouped by continent"""

df_groupby=df_cleaned.groupby('continent').max()
print(df_groupby.reset_index())

"""8.Feature Engineering"""

df_groupby['totaldeaths_totalcases']=df_groupby['total_deaths']/df_groupby['total_cases']
print(df_groupby['totaldeaths_totalcases'])

"""9.Data Visualization"""

import seaborn as sns
import matplotlib.pyplot as plt
df = pd.DataFrame({
    'gdp_per_capita': [30000, 15000, 20000, 40000, 25000, 30000, 12000]
})
sns.histplot(df['gdp_per_capita'], kde=True)  # `distplot` is deprecated; use `histplot` instead
plt.title('Histogram of GDP per Capita')
plt.xlabel('GDP per Capita')
plt.ylabel('Frequency')
plt.show()

import seaborn as sns
import matplotlib.pyplot as ply
sns.scatterplot(x=df_groupby['total_cases'], y=df_groupby['gdp_per_capita'], data=df_groupby)
plt.title('Scatter Plot of Total Cases vs. GDP per Capita')
plt.xlabel('Total Cases')
plt.ylabel('GDP per Capita')
plt.show()

df_groupby = pd.DataFrame({
    'continent': ['Africa', 'Asia', 'Europe'],
    'value1': [60, 50, 40],
    'value2': [55, 45, 35]
})
sns.pairplot(df_groupby, hue='continent')
plt.show()

df = pd.DataFrame({
    'continent': ['Africa', 'Asia', 'Europe'],
    'total_cases': [1000, 2000, 1500]
})
sns.catplot(x='continent', y='total_cases', data=df, kind='bar')
plt.title('Total Cases by Continent')
plt.xlabel('Continent')
plt.ylabel('Total Cases')
plt.show()

df_groupby.to_csv('df_groupby.csv', index=False)